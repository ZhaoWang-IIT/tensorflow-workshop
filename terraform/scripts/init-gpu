#!/bin/bash

set -e
set -x

# NOTE: We'd typically want -u here, however we do a lot of sourcing
# in this script and some of the sourced files assume previously
# defined variables.
set +u

ENV=workshop
ENV_HOME=~/anaconda3/envs/$ENV
ENV_PYTHON_VER=3.6

# set PATH from bashrc so we can run conda activate
source <(grep -e PATH= ~/.bashrc)

stop-auto-upgrade() {
    # stop apt-daily from interfering with init (thanks to https://bit.ly/2rDbCga)
    _safe-kill-service apt-daily.service
    _safe-kill-service apt-daily-upgrade.service
    ps -ef | grep apt
}

_safe-kill-service() {
    sudo systemctl stop $1
    sudo systemctl disable $1
    sudo systemctl kill --kill-who=all $1 || true
    while ! (systemctl list-units --all $1 | fgrep -q dead)
    do
        sleep 1;
    done
}

upgrade-system() {
    if [ ! -e ~/.system-upgraded ]; then
        sudo apt-get update -y
        ps -ef | grep apt
        sudo apt-get upgrade -y
        touch ~/system-upraded
    fi
}

init-ssh() {
    _enabled-password-auth
    _config-user-ssh
}

_enabled-password-auth() {
    sudo sed -i \
     's/PasswordAuthentication no/PasswordAuthentication yes/' \
     /etc/ssh/sshd_config
    sudo systemctl restart sshd
}

_config-user-ssh() {
    # ssh config to access image-proxy (relies on init-gpu-secrets to
    # install image-proxy.pem)
    cat > ~/.ssh/config << EOF
Host image-proxy.guild.ai
     User ubuntu
     IdentityFile ~/.ssh/image-proxy.pem
EOF
}

install-required-system-packages() {
    _install-shellinabox
    _install-ffmpeg
    _install-php
}

_install-shellinabox() {
    if [ ! -e .shellinabox-installed ]; then
        sudo apt-get install shellinabox -y
        sudo tee /etc/default/shellinabox > /dev/null << EOF
SHELLINABOX_DAEMON_START=1
SHELLINABOX_PORT=443
SHELLINABOX_ARGS="--no-beep"
EOF
        sudo systemctl restart shellinabox
        touch .shellinabox-installed
    fi
}

_install-ffmpeg() {
    if [ ! -e .ffmpeg-installed ]; then
        sudo apt-get install -y ffmpeg
        touch .ffmpeg-installed
    fi
}

_install-php() {
    if [ ! -e .php-installed ]; then
        sudo apt-get install -y php-cli
        sudo apt-get install -y php-xml
        touch .php-installed
    fi
}

init-motd() {
    curl -L https://raw.githubusercontent.com/gar1t/tensorflow-workshop/master/terraform/00-header \
        | sudo tee >/dev/null /etc/update-motd.d/00-header
    sudo rm -f /etc/update-motd.d/10-help-text
    sudo rm -f /etc/update-motd.d/51-cloudguest
    sudo rm -f /etc/update-motd.d/91-release-upgrade
    sudo rm -f /etc/update-motd.d/90-updates-available
}

init-workshop-env() {
    if [ ! -e $ENV_HOME ]; then
        conda create --name $ENV python=$ENV_PYTHON_VER --yes
    fi
}

init-workshop-repo() {
    if [ ! -e workshop ]; then
        git clone https://github.com/gar1t/tensorflow-workshop.git workshop
    else
        (cd workshop && git pull --rebase)
    fi
}

install-workshop-packages() {
    (source activate $ENV && pip install --upgrade pip)
    (source activate $ENV && pip install tensorflow-gpu)
    (source activate $ENV && pip install --upgrade --pre guildai)
    (source activate $ENV && pip install cython)
    (source activate $ENV && pip install -r workshop/src/requirements.txt)
}

init-workshop-guild() {
    mkdir -p ~/.guild/cache/resources
    (source activate $ENV && guild init --env --yes)
}

init-guild-remotes() {
    mkdir -p ~/.guild
    cat > ~/.guild/config.yml << EOF
remotes:
  shared:
    type: ssh
    description: Shared server
    host: image-proxy.guild.ai
    guild-home: .guild
EOF
}

clear-known-hosts() {
    rm -f ~/.ssh/known_hosts
}

download-guild-resources() {
    guild_resource_urls=(
        https://github.com/tensorflow/models/archive/490813bdb3499290633919a9867eb0bb6d346d87.zip
        http://download.tensorflow.org/models/object_detection/mask_rcnn_resnet101_atrous_coco_2018_01_28.tar.gz
        http://storage.googleapis.com/download.tensorflow.org/models/object_detection/faster_rcnn_resnet101_coco_11_06_2017.tar.gz
        https://s3.amazonaws.com/guild-pub/oxford-pets/images.tar.gz
        https://s3.amazonaws.com/guild-pub/oxford-pets/annotations.tar.gz
        https://github.com/frederictost/images_annotation_programme/archive/cc3ab6037ee251642f1f7413a67949d2a3906425.zip
    )
    for url in ${guild_resource_urls[@]}; do
        (source activate $ENV && guild download $url)
    done
}

rm-workspace-click-package() {
    rm -rf $ENV_HOME/lib/python${ENV_PYTHON_VER}/site-packages/click
}

stop-auto-upgrade
upgrade-system
init-ssh
install-required-system-packages
init-motd
init-workshop-env
init-workshop-repo
install-workshop-packages
init-workshop-guild
init-guild-remotes
clear-known-hosts
download-guild-resources
rm-workspace-click-package
